{"nodes": [{"code": "    private volatile ServiceState serviceState = ServiceState.CREATE_JUST;\n", "file_name": "c183e0d4026770a68bedce02507446431cdf6265__CLDIFF__client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java", "id": 27, "desc": "updateFieldDeclaration ", "group": 0}, {"code": "    public synchronized void shutdown() {\n        switch (this.serviceState) {\n            case CREATE_JUST:\n                break;\n            case RUNNING:\n                this.persistConsumerOffset();\n                this.mQClientFactory.unregisterConsumer(this.defaultMQPullConsumer.getConsumerGroup());\n                this.mQClientFactory.shutdown();\n                log.info(\"the consumer [{}] shutdown OK\", this.defaultMQPullConsumer.getConsumerGroup());\n                this.serviceState = ServiceState.SHUTDOWN_ALREADY;\n                break;\n            case SHUTDOWN_ALREADY:\n                break;\n            default:\n                break;\n        }\n    }\n", "file_name": "c183e0d4026770a68bedce02507446431cdf6265__CLDIFF__client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java", "id": 28, "desc": "updateMethodDeclaration declaration", "group": 0}, {"code": "    public synchronized void start() throws MQClientException {\n        switch (this.serviceState) {\n            case CREATE_JUST:\n                this.serviceState = ServiceState.START_FAILED;\n\n                this.checkConfig();\n\n                this.copySubscription();\n\n                if (this.defaultMQPullConsumer.getMessageModel() == MessageModel.CLUSTERING) {\n                    this.defaultMQPullConsumer.changeInstanceNameToPID();\n                }\n\n                this.mQClientFactory = MQClientManager.getInstance().getAndCreateMQClientInstance(this.defaultMQPullConsumer, this.rpcHook);\n\n                this.rebalanceImpl.setConsumerGroup(this.defaultMQPullConsumer.getConsumerGroup());\n                this.rebalanceImpl.setMessageModel(this.defaultMQPullConsumer.getMessageModel());\n                this.rebalanceImpl.setAllocateMessageQueueStrategy(this.defaultMQPullConsumer.getAllocateMessageQueueStrategy());\n                this.rebalanceImpl.setmQClientFactory(this.mQClientFactory);\n\n                this.pullAPIWrapper = new PullAPIWrapper(//\n                    mQClientFactory, //\n                    this.defaultMQPullConsumer.getConsumerGroup(), isUnitMode());\n                this.pullAPIWrapper.registerFilterMessageHook(filterMessageHookList);\n\n                if (this.defaultMQPullConsumer.getOffsetStore() != null) {\n                    this.offsetStore = this.defaultMQPullConsumer.getOffsetStore();\n                } else {\n                    switch (this.defaultMQPullConsumer.getMessageModel()) {\n                        case BROADCASTING:\n                            this.offsetStore = new LocalFileOffsetStore(this.mQClientFactory, this.defaultMQPullConsumer.getConsumerGroup());\n                            break;\n                        case CLUSTERING:\n                            this.offsetStore = new RemoteBrokerOffsetStore(this.mQClientFactory, this.defaultMQPullConsumer.getConsumerGroup());\n                            break;\n                        default:\n                            break;\n                    }\n                }\n\n                this.offsetStore.load();\n\n                boolean registerOK = mQClientFactory.registerConsumer(this.defaultMQPullConsumer.getConsumerGroup(), this);\n                if (!registerOK) {\n                    this.serviceState = ServiceState.CREATE_JUST;\n\n                    throw new MQClientException(\"The consumer group[\" + this.defaultMQPullConsumer.getConsumerGroup()\n                        + \"] has been created before, specify another name please.\" + FAQUrl.suggestTodo(FAQUrl.GROUP_NAME_DUPLICATE_URL),\n                        null);\n                }\n\n                mQClientFactory.start();\n                log.info(\"the consumer [{}] start OK\", this.defaultMQPullConsumer.getConsumerGroup());\n                this.serviceState = ServiceState.RUNNING;\n                break;\n            case RUNNING:\n            case START_FAILED:\n            case SHUTDOWN_ALREADY:\n                throw new MQClientException(\"The PullConsumer service state not OK, maybe started once, \"//\n                    + this.serviceState//\n                    + FAQUrl.suggestTodo(FAQUrl.CLIENT_SERVICE_NOT_OK),\n                    null);\n            default:\n                break;\n        }\n\n    }\n", "file_name": "c183e0d4026770a68bedce02507446431cdf6265__CLDIFF__client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java", "id": 29, "desc": "updateMethodDeclaration declaration", "group": 0}, {"code": "    @Deprecated\n    public void setServiceState(ServiceState serviceState) {\n        this.serviceState = serviceState;\n    }\n", "file_name": "c183e0d4026770a68bedce02507446431cdf6265__CLDIFF__client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPullConsumerImpl.java", "id": 30, "desc": "updateMethodDeclaration declaration", "group": 0}, {"code": "    private volatile ServiceState serviceState = ServiceState.CREATE_JUST;\n", "file_name": "c183e0d4026770a68bedce02507446431cdf6265__CLDIFF__client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java", "id": 31, "desc": "updateFieldDeclaration ", "group": 1}, {"code": "    public synchronized void shutdown() {\n        switch (this.serviceState) {\n            case CREATE_JUST:\n                break;\n            case RUNNING:\n                this.consumeMessageService.shutdown();\n                this.persistConsumerOffset();\n                this.mQClientFactory.unregisterConsumer(this.defaultMQPushConsumer.getConsumerGroup());\n                this.mQClientFactory.shutdown();\n                log.info(\"the consumer [{}] shutdown OK\", this.defaultMQPushConsumer.getConsumerGroup());\n                this.rebalanceImpl.destroy();\n                this.serviceState = ServiceState.SHUTDOWN_ALREADY;\n                break;\n            case SHUTDOWN_ALREADY:\n                break;\n            default:\n                break;\n        }\n    }\n", "file_name": "c183e0d4026770a68bedce02507446431cdf6265__CLDIFF__client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java", "id": 32, "desc": "updateMethodDeclaration declaration", "group": 1}, {"code": "    public synchronized void start() throws MQClientException {\n        switch (this.serviceState) {\n            case CREATE_JUST:\n                log.info(\"the consumer [{}] start beginning. messageModel={}, isUnitMode={}\", this.defaultMQPushConsumer.getConsumerGroup(),\n                    this.defaultMQPushConsumer.getMessageModel(), this.defaultMQPushConsumer.isUnitMode());\n                this.serviceState = ServiceState.START_FAILED;\n\n                this.checkConfig();\n\n                this.copySubscription();\n\n                if (this.defaultMQPushConsumer.getMessageModel() == MessageModel.CLUSTERING) {\n                    this.defaultMQPushConsumer.changeInstanceNameToPID();\n                }\n\n                this.mQClientFactory = MQClientManager.getInstance().getAndCreateMQClientInstance(this.defaultMQPushConsumer, this.rpcHook);\n\n                this.rebalanceImpl.setConsumerGroup(this.defaultMQPushConsumer.getConsumerGroup());\n                this.rebalanceImpl.setMessageModel(this.defaultMQPushConsumer.getMessageModel());\n                this.rebalanceImpl.setAllocateMessageQueueStrategy(this.defaultMQPushConsumer.getAllocateMessageQueueStrategy());\n                this.rebalanceImpl.setmQClientFactory(this.mQClientFactory);\n\n                this.pullAPIWrapper = new PullAPIWrapper(\n                    mQClientFactory,\n                    this.defaultMQPushConsumer.getConsumerGroup(), isUnitMode());\n                this.pullAPIWrapper.registerFilterMessageHook(filterMessageHookList);\n\n                if (this.defaultMQPushConsumer.getOffsetStore() != null) {\n                    this.offsetStore = this.defaultMQPushConsumer.getOffsetStore();\n                } else {\n                    switch (this.defaultMQPushConsumer.getMessageModel()) {\n                        case BROADCASTING:\n                            this.offsetStore = new LocalFileOffsetStore(this.mQClientFactory, this.defaultMQPushConsumer.getConsumerGroup());\n                            break;\n                        case CLUSTERING:\n                            this.offsetStore = new RemoteBrokerOffsetStore(this.mQClientFactory, this.defaultMQPushConsumer.getConsumerGroup());\n                            break;\n                        default:\n                            break;\n                    }\n                }\n                this.offsetStore.load();\n\n                if (this.getMessageListenerInner() instanceof MessageListenerOrderly) {\n                    this.consumeOrderly = true;\n                    this.consumeMessageService =\n                        new ConsumeMessageOrderlyService(this, (MessageListenerOrderly) this.getMessageListenerInner());\n                } else if (this.getMessageListenerInner() instanceof MessageListenerConcurrently) {\n                    this.consumeOrderly = false;\n                    this.consumeMessageService =\n                        new ConsumeMessageConcurrentlyService(this, (MessageListenerConcurrently) this.getMessageListenerInner());\n                }\n\n                this.consumeMessageService.start();\n\n                boolean registerOK = mQClientFactory.registerConsumer(this.defaultMQPushConsumer.getConsumerGroup(), this);\n                if (!registerOK) {\n                    this.serviceState = ServiceState.CREATE_JUST;\n                    this.consumeMessageService.shutdown();\n                    throw new MQClientException(\"The consumer group[\" + this.defaultMQPushConsumer.getConsumerGroup()\n                        + \"] has been created before, specify another name please.\" + FAQUrl.suggestTodo(FAQUrl.GROUP_NAME_DUPLICATE_URL),\n                        null);\n                }\n\n                mQClientFactory.start();\n                log.info(\"the consumer [{}] start OK.\", this.defaultMQPushConsumer.getConsumerGroup());\n                this.serviceState = ServiceState.RUNNING;\n                break;\n            case RUNNING:\n            case START_FAILED:\n            case SHUTDOWN_ALREADY:\n                throw new MQClientException(\"The PushConsumer service state not OK, maybe started once, \"//\n                    + this.serviceState//\n                    + FAQUrl.suggestTodo(FAQUrl.CLIENT_SERVICE_NOT_OK),\n                    null);\n            default:\n                break;\n        }\n\n        this.updateTopicSubscribeInfoWhenSubscriptionChanged();\n        this.mQClientFactory.sendHeartbeatToAllBrokerWithLock();\n        this.mQClientFactory.rebalanceImmediately();\n    }\n", "file_name": "c183e0d4026770a68bedce02507446431cdf6265__CLDIFF__client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java", "id": 33, "desc": "updateMethodDeclaration declaration", "group": 1}, {"code": "    @Deprecated\n    public synchronized void setServiceState(ServiceState serviceState) {\n        this.serviceState = serviceState;\n    }\n", "file_name": "c183e0d4026770a68bedce02507446431cdf6265__CLDIFF__client/src/main/java/org/apache/rocketmq/client/impl/consumer/DefaultMQPushConsumerImpl.java", "id": 34, "desc": "updateMethodDeclaration declaration", "group": 1}], "edges": []}