{
    "nodes": [
        {
            "code": "    public void search(List<LeafReaderContext> leaves, Weight weight, CollectorManager manager) throws IOException {\n        final List<Collector> collectors = new ArrayList<>(leaves.size());\n        for (LeafReaderContext ctx : leaves) {\n            final Collector collector = manager.newCollector();\n            //TODO: setMinCompetitveScore between Collectors\n            searchLeaf(ctx, weight, collector);\n            collectors.add(collector);\n        }\n        manager.reduce(collectors);\n    }\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java",
            "id": 0,
            "desc": "addMethodDeclaration",
            "group": 0
        },
        {
            "code": "    private void searchLeaf(LeafReaderContext ctx, Weight weight, Collector collector) throws IOException {\n        checkCancelled();\n        weight = wrapWeight(weight);\n        final LeafCollector leafCollector;\n        try {\n            leafCollector = collector.getLeafCollector(ctx);\n        } catch (CollectionTerminatedException e) {\n            // there is no doc of interest in this reader context\n            // continue with the following leaf\n            return;\n        }\n        Bits liveDocs = ctx.reader().getLiveDocs();\n        BitSet liveDocsBitSet = getSparseBitSetOrNull(liveDocs);\n        if (liveDocsBitSet == null) {\n            BulkScorer bulkScorer = weight.bulkScorer(ctx);\n            if (bulkScorer != null) {\n                try {\n                    bulkScorer.score(leafCollector, liveDocs);\n                } catch (CollectionTerminatedException e) {\n                    // collection was terminated prematurely\n                    // continue with the following leaf\n                }\n            }\n        } else {\n            // if the role query result set is sparse then we should use the SparseFixedBitSet for advancing:\n            Scorer scorer = weight.scorer(ctx);\n            if (scorer != null) {\n                try {\n                    intersectScorerAndBitSet(scorer, liveDocsBitSet, leafCollector,\n                        checkCancelled == null ? () -> {\n                        } : checkCancelled);\n                } catch (CollectionTerminatedException e) {\n                    // collection was terminated prematurely\n                    // continue with the following leaf\n                }\n            }\n        }\n    }\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/internal/ContextIndexSearcher.java",
            "id": 1,
            "desc": "updateMethodDeclaration declaration",
            "group": 0
        },
        {
            "code": "            boolean shouldRescore;\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 2,
            "desc": "movePrimitiveType",
            "group": 1
        },
        {
            "code": "            if (sortAndFormatsForRewrittenNumericSort != null && collectors.size() == 0 && searchContext.getProfilers() == null) {\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 3,
            "desc": "moveMethodInvocation",
            "group": 1
        },
        {
            "code": "            if (sortAndFormatsForRewrittenNumericSort != null && collectors.size() == 0 && searchContext.getProfilers() == null) {\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 4,
            "desc": "moveNullLiteral",
            "group": 1
        },
        {
            "code": "            if (sortAndFormatsForRewrittenNumericSort != null && collectors.size() == 0 && searchContext.getProfilers() == null) {\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 5,
            "desc": "moveSimpleName",
            "group": 1
        },
        {
            "code": "                shouldRescore = searchWithCollectorManager(searchContext, searcher, query, leafSorter, timeoutSet);\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 6,
            "desc": "moveSimpleName",
            "group": 1
        },
        {
            "code": "                shouldRescore = searchWithCollectorManager(searchContext, searcher, query, leafSorter, timeoutSet);\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 7,
            "desc": "moveSimpleName",
            "group": 1
        },
        {
            "code": "                shouldRescore = searchWithCollectorManager(searchContext, searcher, query, leafSorter, timeoutSet);\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 8,
            "desc": "moveSimpleName",
            "group": 1
        },
        {
            "code": "                shouldRescore = searchWithCollector(searchContext, searcher, query, collectors, hasFilterCollector, timeoutSet);\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 9,
            "desc": "moveSimpleName",
            "group": 1
        },
        {
            "code": "            boolean shouldRescore;\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 10,
            "desc": "addVariableDeclaration",
            "group": 1
        },
        {
            "code": "            if (sortAndFormatsForRewrittenNumericSort != null && collectors.size() == 0 && searchContext.getProfilers() == null) {\n                shouldRescore = searchWithCollectorManager(searchContext, searcher, query, leafSorter, timeoutSet);\n            } else {\n                shouldRescore = searchWithCollector(searchContext, searcher, query, collectors, hasFilterCollector, timeoutSet);\n            }\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 11,
            "desc": "addIf",
            "group": 1
        },
        {
            "code": "                shouldRescore = searchWithCollectorManager(searchContext, searcher, query, leafSorter, timeoutSet);\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 12,
            "desc": "addExpressionStatement",
            "group": 1
        },
        {
            "code": "                shouldRescore = searchWithCollector(searchContext, searcher, query, collectors, hasFilterCollector, timeoutSet);\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 13,
            "desc": "addExpressionStatement",
            "group": 1
        },
        {
            "code": "            final boolean doProfile = searchContext.getProfilers() != null;\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 14,
            "desc": "deleteVariableDeclaration",
            "group": 1
        },
        {
            "code": "            final TopDocsCollectorContext topDocsFactory = createTopDocsCollectorContext(searchContext, hasFilterCollector);\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 15,
            "desc": "deleteVariableDeclaration",
            "group": 1
        },
        {
            "code": "            collectors.addFirst(topDocsFactory);\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 16,
            "desc": "deleteExpressionStatement",
            "group": 1
        },
        {
            "code": "            final Collector queryCollector;\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 17,
            "desc": "deleteVariableDeclaration",
            "group": 1
        },
        {
            "code": "            if (doProfile) {\n                InternalProfileCollector profileCollector = QueryCollectorContext.createQueryCollectorWithProfiler(collectors);\n                searchContext.getProfilers().getCurrentQueryProfiler().setCollector(profileCollector);\n                queryCollector = profileCollector;\n            } else {\n               queryCollector = QueryCollectorContext.createQueryCollector(collectors);\n            }\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 18,
            "desc": "deleteIf",
            "group": 1
        },
        {
            "code": "            try {\n                Weight weight = searcher.createWeight(searcher.rewrite(query), queryCollector.scoreMode(), 1f);\n                // We search the leaves in a different order when the numeric sort optimization is\n                // activated. Collectors expect leaves in order when searching but this is fine in this\n                // case since we only have a TopFieldCollector and we force the tiebreak on _doc.\n                List<LeafReaderContext> leaves = new ArrayList<>(searcher.getIndexReader().leaves());\n                leafSorter.accept(leaves);\n                for (LeafReaderContext ctx : leaves) {\n                    searcher.searchLeaf(ctx, weight, queryCollector);\n                }\n            } catch (EarlyTerminatingCollector.EarlyTerminationException e) {\n                queryResult.terminatedEarly(true);\n            } catch (TimeExceededException e) {\n                assert timeoutSet : \"TimeExceededException thrown even though timeout wasn't set\";\n\n                if (searchContext.request().allowPartialSearchResults() == false) {\n                    // Can't rethrow TimeExceededException because not serializable\n                    throw new QueryPhaseExecutionException(searchContext, \"Time exceeded\");\n                }\n                queryResult.searchTimedOut(true);\n            } finally {\n                searchContext.clearReleasables(SearchContext.Lifetime.COLLECTION);\n            }\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 19,
            "desc": "deleteTry",
            "group": 1
        },
        {
            "code": "            if (searchContext.terminateAfter() != SearchContext.DEFAULT_TERMINATE_AFTER\n                    && queryResult.terminatedEarly() == null) {\n                queryResult.terminatedEarly(false);\n            }\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 20,
            "desc": "deleteIf",
            "group": 1
        },
        {
            "code": "            final QuerySearchResult result = searchContext.queryResult();\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 21,
            "desc": "deleteVariableDeclaration",
            "group": 1
        },
        {
            "code": "            for (QueryCollectorContext ctx : collectors) {\n                ctx.postProcess(result);\n            }\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 22,
            "desc": "deleteEnhancedFor",
            "group": 1
        },
        {
            "code": "                InternalProfileCollector profileCollector = QueryCollectorContext.createQueryCollectorWithProfiler(collectors);\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 23,
            "desc": "deleteVariableDeclaration",
            "group": 1
        },
        {
            "code": "                searchContext.getProfilers().getCurrentQueryProfiler().setCollector(profileCollector);\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 24,
            "desc": "deleteExpressionStatement",
            "group": 1
        },
        {
            "code": "                queryCollector = profileCollector;\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 25,
            "desc": "deleteExpressionStatement",
            "group": 1
        },
        {
            "code": "               queryCollector = QueryCollectorContext.createQueryCollector(collectors);\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 26,
            "desc": "deleteExpressionStatement",
            "group": 1
        },
        {
            "code": "            return shouldRescore;\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 27,
            "desc": "updateReturn   by",
            "group": 1
        },
        {
            "code": "                restoreTopFieldDocs(queryResult, sortAndFormatsForRewrittenNumericSort);\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 28,
            "desc": "updateExpressionStatement   by",
            "group": 1
        },
        {
            "code": "                queryResult.profileResults(shardResults);\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 29,
            "desc": "updateExpressionStatement   by",
            "group": 1
        },
        {
            "code": "    private static boolean searchWithCollectorManager(SearchContext searchContext, ContextIndexSearcher searcher, Query query,\n            CheckedConsumer<List<LeafReaderContext>, IOException> leafSorter, boolean timeoutSet) throws IOException {\n        final IndexReader reader = searchContext.searcher().getIndexReader();\n        final int numHits = Math.min(searchContext.from() + searchContext.size(),  Math.max(1, reader.numDocs()));\n        final SortAndFormats sortAndFormats = searchContext.sort();\n\n        int totalHitsThreshold;\n        TotalHits totalHits;\n        if (searchContext.trackTotalHitsUpTo() == SearchContext.TRACK_TOTAL_HITS_DISABLED) {\n            totalHitsThreshold = 1;\n            totalHits = new TotalHits(0, TotalHits.Relation.GREATER_THAN_OR_EQUAL_TO);\n        } else {\n            int hitCount = shortcutTotalHitCount(reader, query);\n            if (hitCount == -1) {\n                totalHitsThreshold = searchContext.trackTotalHitsUpTo();\n                totalHits = null; // will be computed via the collector\n            } else {\n                totalHitsThreshold = 1;\n                totalHits = new TotalHits(hitCount, TotalHits.Relation.EQUAL_TO); // don't compute hit counts via the collector\n            }\n        }\n\n        CollectorManager<TopFieldCollector, Void> manager = new CollectorManager<>() {\n            @Override\n            public TopFieldCollector newCollector() throws IOException {\n                return TopFieldCollector.create(sortAndFormats.sort, numHits, null, totalHitsThreshold);\n            }\n            @Override\n            public Void reduce(Collection<TopFieldCollector> collectors) throws IOException {\n                TopFieldDocs[] topDocsArr = new TopFieldDocs[collectors.size()];\n                int i = 0;\n                for (TopFieldCollector collector : collectors) {\n                    topDocsArr[i++] = collector.topDocs();\n                }\n                // we have to set setShardIndex to true, as Lucene can't have ScoreDocs without shardIndex set\n                TopFieldDocs mergedTopDocs = TopDocs.merge(sortAndFormats.sort, 0, numHits, topDocsArr, true);\n                // reset shard index for all topDocs; ES will set shard index later during reduce stage\n                for (ScoreDoc scoreDoc : mergedTopDocs.scoreDocs) {\n                    scoreDoc.shardIndex = -1;\n                }\n                if (totalHits != null) { // we have already precalculated totalHits for the whole index\n                    mergedTopDocs = new TopFieldDocs(totalHits, mergedTopDocs.scoreDocs, mergedTopDocs.fields);\n                }\n                searchContext.queryResult().topDocs(new TopDocsAndMaxScore(mergedTopDocs, Float.NaN), sortAndFormats.formats);\n                return null;\n            }\n        };\n\n        List<LeafReaderContext> leaves = new ArrayList<>(searcher.getIndexReader().leaves());\n        leafSorter.accept(leaves);\n        try {\n            Weight weight = searcher.createWeight(searcher.rewrite(query), ScoreMode.TOP_SCORES, 1f);\n            searcher.search(leaves, weight, manager);\n        } catch (TimeExceededException e) {\n            assert timeoutSet : \"TimeExceededException thrown even though timeout wasn't set\";\n            if (searchContext.request().allowPartialSearchResults() == false) {\n                // Can't rethrow TimeExceededException because not serializable\n                throw new QueryPhaseExecutionException(searchContext, \"Time exceeded\");\n            }\n            searchContext.queryResult().searchTimedOut(true);\n        } finally {\n            searchContext.clearReleasables(SearchContext.Lifetime.COLLECTION);\n        }\n        return false; // no rescoring when sorting by field\n    }\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 30,
            "desc": "addMethodDeclaration",
            "group": 1
        },
        {
            "code": "    private static boolean searchWithCollector(SearchContext searchContext, ContextIndexSearcher searcher, Query query,\n            LinkedList<QueryCollectorContext> collectors, boolean hasFilterCollector, boolean timeoutSet) throws IOException {\n        // create the top docs collector last when the other collectors are known\n        final TopDocsCollectorContext topDocsFactory = createTopDocsCollectorContext(searchContext, hasFilterCollector);\n        // add the top docs collector, the first collector context in the chain\n        collectors.addFirst(topDocsFactory);\n\n        final Collector queryCollector;\n        if ( searchContext.getProfilers() != null) {\n            InternalProfileCollector profileCollector = QueryCollectorContext.createQueryCollectorWithProfiler(collectors);\n            searchContext.getProfilers().getCurrentQueryProfiler().setCollector(profileCollector);\n            queryCollector = profileCollector;\n        } else {\n            queryCollector = QueryCollectorContext.createQueryCollector(collectors);\n        }\n        QuerySearchResult queryResult = searchContext.queryResult();\n        try {\n            searcher.search(query, queryCollector);\n        } catch (EarlyTerminatingCollector.EarlyTerminationException e) {\n            queryResult.terminatedEarly(true);\n        } catch (TimeExceededException e) {\n            assert timeoutSet : \"TimeExceededException thrown even though timeout wasn't set\";\n            if (searchContext.request().allowPartialSearchResults() == false) {\n                // Can't rethrow TimeExceededException because not serializable\n                throw new QueryPhaseExecutionException(searchContext, \"Time exceeded\");\n            }\n            queryResult.searchTimedOut(true);\n        } finally {\n            searchContext.clearReleasables(SearchContext.Lifetime.COLLECTION);\n        }\n        if (searchContext.terminateAfter() != SearchContext.DEFAULT_TERMINATE_AFTER && queryResult.terminatedEarly() == null) {\n            queryResult.terminatedEarly(false);\n        }\n        for (QueryCollectorContext ctx : collectors) {\n            ctx.postProcess(queryResult);\n        }\n        return topDocsFactory.shouldRescore();\n    }\n",
            "file_name": "c4c3b66860f60990d3146c1a44fc6edd3cc22540__CLDIFF__server/src/main/java/org/elasticsearch/search/query/QueryPhase.java",
            "id": 31,
            "desc": "addMethodDeclaration",
            "group": 1
        }
    ],
    "links": [
        {
            "link_type_str": "systematic",
            "source": 28,
            "text": "systematic",
            "type": 44,
            "value": 1,
            "target": 29
        },
        {
            "link_type_str": "defUseTaicu",
            "source": 1,
            "text": "defUseTaicu",
            "type": 51,
            "value": 1,
            "target": 0
        },
        {
            "link_type_str": "defUseMethod",
            "source": 30,
            "text": "defUseMethod",
            "type": 56,
            "value": 1,
            "target": 11
        },
        {
            "link_type_str": "defUseMethod",
            "source": 30,
            "text": "defUseMethod",
            "type": 56,
            "value": 1,
            "target": 12
        },
        {
            "link_type_str": "defUseMethod",
            "source": 31,
            "text": "defUseMethod",
            "type": 56,
            "value": 1,
            "target": 11
        },
        {
            "link_type_str": "defUseMethod",
            "source": 31,
            "text": "defUseMethod",
            "type": 56,
            "value": 1,
            "target": 13
        },
        {
            "link_type_str": "defUse",
            "source": 10,
            "text": "defUse",
            "type": 5,
            "value": 1,
            "target": 12
        },
        {
            "link_type_str": "defUse",
            "source": 10,
            "text": "defUse",
            "type": 5,
            "value": 1,
            "target": 13
        },
        {
            "link_type_str": "defUse",
            "source": 10,
            "text": "defUse",
            "type": 5,
            "value": 1,
            "target": 27
        },
        {
            "link_type_str": "defUse",
            "source": 14,
            "text": "defUse",
            "type": 5,
            "value": 1,
            "target": 27
        },
        {
            "link_type_str": "defUse",
            "source": 15,
            "text": "defUse",
            "type": 5,
            "value": 1,
            "target": 16
        },
        {
            "link_type_str": "defUse",
            "source": 15,
            "text": "defUse",
            "type": 5,
            "value": 1,
            "target": 27
        },
        {
            "link_type_str": "defUse",
            "source": 17,
            "text": "defUse",
            "type": 5,
            "value": 1,
            "target": 19
        },
        {
            "link_type_str": "defUse",
            "source": 17,
            "text": "defUse",
            "type": 5,
            "value": 1,
            "target": 25
        },
        {
            "link_type_str": "defUse",
            "source": 17,
            "text": "defUse",
            "type": 5,
            "value": 1,
            "target": 26
        },
        {
            "link_type_str": "defUse",
            "source": 23,
            "text": "defUse",
            "type": 5,
            "value": 1,
            "target": 24
        },
        {
            "link_type_str": "defUse",
            "source": 23,
            "text": "defUse",
            "type": 5,
            "value": 1,
            "target": 25
        },
        {
            "link_type_str": "defUseTaicu",
            "source": 0,
            "text": "defUseTaicu",
            "type": 51,
            "value": 1,
            "target": 30
        },
        {
            "link_type_str": "defUseMethod",
            "source": 1,
            "text": "defUseMethod",
            "type": 56,
            "value": 1,
            "target": 19
        }
    ]
}