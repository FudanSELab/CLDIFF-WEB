{
    "nodes": [
        {
            "code": "\t\tinitialize(request);\n",
            "file_name": "b587003d8dd566d8afe6c5da51b4980c1baae554__CLDIFF__spring-web/src/main/java/org/springframework/http/client/support/HttpAccessor.java",
            "id": 1,
            "desc": "addExpressionStatement",
            "group": 0
        },
        {
            "code": "\tprivate void initialize(ClientHttpRequest request) {\n\t\tthis.clientHttpRequestInitializers.forEach(\n\t\t\t\tinitializer -> initializer.initialize(request));\n\t}\n",
            "file_name": "b587003d8dd566d8afe6c5da51b4980c1baae554__CLDIFF__spring-web/src/main/java/org/springframework/http/client/support/HttpAccessor.java",
            "id": 2,
            "desc": "addMethodDeclaration",
            "group": 0
        },
        {
            "code": "\tpublic List<ClientHttpRequestInitializer> getClientHttpRequestInitializers() {\n\t\treturn this.clientHttpRequestInitializers;\n\t}\n",
            "file_name": "b587003d8dd566d8afe6c5da51b4980c1baae554__CLDIFF__spring-web/src/main/java/org/springframework/http/client/support/HttpAccessor.java",
            "id": 3,
            "desc": "addMethodDeclaration",
            "group": 0
        },
        {
            "code": "\tpublic void setClientHttpRequestInitializers(\n\t\t\tList<ClientHttpRequestInitializer> clientHttpRequestInitializers) {\n\t\tif (this.clientHttpRequestInitializers != clientHttpRequestInitializers) {\n\t\t\tthis.clientHttpRequestInitializers.clear();\n\t\t\tthis.clientHttpRequestInitializers.addAll(clientHttpRequestInitializers);\n\t\t\tAnnotationAwareOrderComparator.sort(this.clientHttpRequestInitializers);\n\t\t}\n\t}\n",
            "file_name": "b587003d8dd566d8afe6c5da51b4980c1baae554__CLDIFF__spring-web/src/main/java/org/springframework/http/client/support/HttpAccessor.java",
            "id": 4,
            "desc": "addMethodDeclaration",
            "group": 0
        },
        {
            "code": "\tprivate List<ClientHttpRequestInitializer> clientHttpRequestInitializers = new ArrayList<>();\n",
            "file_name": "b587003d8dd566d8afe6c5da51b4980c1baae554__CLDIFF__spring-web/src/main/java/org/springframework/http/client/support/HttpAccessor.java",
            "id": 5,
            "desc": "addFieldDeclaration",
            "group": 0
        },
        {
            "code": "/**\n * Callback interface for initializing a {@link ClientHttpRequest} prior to it\n * being used.\n *\n * <p> Typically used with {@link HttpAccessor} and subclasses such as\n * {@link org.springframework.web.client.RestTemplate RestTemplate} to apply\n * consistent settings or headers to each request.\n *\n * <p>Unlike {@link ClientHttpRequestInterceptor}, this interface can apply\n * customizations without needing to read the entire request body into memory.\n *\n * @author Phillip Webb\n * @since 5.2\n * @see HttpAccessor#getClientHttpRequestInitializers()\n */\n@FunctionalInterface\npublic interface ClientHttpRequestInitializer {\n\n\t/**\n\t * Initialize the given client HTTP request.\n\t * @param request the request to configure\n\t */\n\tvoid initialize(ClientHttpRequest request);\n\n}\n",
            "file_name": "b587003d8dd566d8afe6c5da51b4980c1baae554__CLDIFF__spring-web/src/main/java/org/springframework/http/client/ClientHttpRequestInitializer.java",
            "id": 0,
            "desc": "addInterface",
            "group": 1
        }
    ],
    "edges": [
        {
            "link_type_str": "defUseMethod",
            "source": 2,
            "text": "defUseMethod",
            "type": 56,
            "value": 1,
            "target": 1
        },
        {
            "link_type_str": "defUseTaicu",
            "source": 5,
            "text": "defUseTaicu",
            "type": 51,
            "value": 1,
            "target": 3
        },
        {
            "link_type_str": "defUseClass",
            "source": 0,
            "text": "defUseClass",
            "type": 55,
            "value": 1,
            "target": 1
        },
        {
            "link_type_str": "defUseTaicu",
            "source": 0,
            "text": "defUseTaicu",
            "type": 51,
            "value": 1,
            "target": 2
        }
    ]
}